import { Container } from "@mui/material";
import { useRouter } from "next/router";
import { PropsWithoutRef } from "react";
import { useSelector } from "../../../app/hooks";
import useCheckState from "../../../hooks/useCheckState";
import WebSeo from "../../../modules/share/model/webSeo";
import { SubjectData } from "../../../types/SubjectData";
import CtaButton from "../../CtaButton";
import Introduction from "../../introduction";
import "./dmvSubjectView.scss";

const DMVSubjectView = (props: PropsWithoutRef<{
  seoInfo?: WebSeo;
  subjectData?: SubjectData;
}>) => {
  const { seoInfo, subjectData } = props;
  const { currentState, checkState } = useCheckState({ localCheck: true });
  const statesList = useSelector((state) => state.state.statesList);
  const router = useRouter();
  return <Container maxWidth="xl">
    <div className="subject-main-view dmv">
      <h1 className="title-h1">{seoInfo?.titleH1}</h1>
      <div className="summary" dangerouslySetInnerHTML={{ __html: seoInfo?.summary }} />

      <div className="cta-state">
        <CtaButton
          title={!!currentState ? `Go to ${currentState.name} ${subjectData.name}` : "Select State"}
          onClick={() => {
            const postFix = `-${subjectData.key}-practice-test`;
            checkState({
              onSelectCallback: (stateSlug) => {
                const state = statesList.find(({ slug }) => stateSlug === slug);
                if (state) router.push(`/${state.slug}/${state.shortSlug}${postFix}`);
              },
              action: () => {
                if (currentState) router.push(`/${currentState.slug}/${currentState.shortSlug}${postFix}`)
              }
            });
          }}
          width={currentState ? 576 : 300}
          breakpoint={576}
          backgroundColor="#FAC80B"
          backgroundLayerColor="#CE982E"
          borderRadius={15}
          color="#fff"
          className="cta-state-button"
          titleClassName="cta-state-title"
          endIcon={<svg xmlns="http://www.w3.org/2000/svg" width="22" height="29" viewBox="0 0 22 29" fill="none">
            <path fillRule="evenodd" clipRule="evenodd" d="M10.4105 5.342C10.8551 3.72906 11.9246 2.73495 13.2607 2.38967C15.4072 1.90446 17.3796 2.70362 18.4639 4.29545C19.539 5.87353 19.4894 7.93475 18.3312 9.33459C18.1887 9.50705 18.0252 9.66335 17.8616 9.81971C17.7701 9.90717 17.6786 9.99465 17.5907 10.085C17.3352 10.3485 17.2916 10.6481 17.5545 10.9457C17.8237 11.2503 18.1439 11.2169 18.4489 11.036C18.5434 10.9794 18.6256 10.9042 18.7078 10.8289C18.7302 10.8084 18.7527 10.7879 18.7753 10.7677C20.5589 9.1735 21.0179 6.6752 19.9536 4.37915C18.9433 2.2014 16.5883 0.852783 14.0173 0.978835C11.7205 1.08984 9.6944 2.76771 9.1467 5.01475C9.138 5.04956 9.1267 5.0862 9.1153 5.12347C9.0766 5.2499 9.0356 5.38356 9.0812 5.47732C9.1952 5.71264 9.3673 6.03916 9.5677 6.09136C9.7702 6.14313 10.0632 5.93857 10.2662 5.78485C10.3407 5.72891 10.3611 5.60749 10.3813 5.48727C10.3898 5.43701 10.3982 5.38697 10.4105 5.342ZM18.3283 18.6711C18.9457 17.9136 19.8368 17.7847 20.6063 18.3462C21.3549 18.8933 21.4958 19.7986 20.959 20.6016C20.7028 20.9816 20.4458 21.3628 20.1908 21.7435L20.0637 21.9325C19.1581 23.279 18.2245 24.6674 17.2838 26.0199C15.3827 28.7533 11.9247 29.4077 8.875 27.6103C8.4623 27.367 8.0062 27.0975 7.5313 26.8099C7.1548 26.5819 6.7656 26.343 6.3768 26.0977C4.95806 25.2023 4.02134 23.9748 3.59054 22.4477C3.22391 21.1488 2.85984 19.8283 2.50853 18.5502C2.45274 18.3485 2.39714 18.1464 2.34153 17.9444C2.28593 17.7423 2.23032 17.5403 2.17453 17.3386L2.17052 17.3394L2.04965 16.9023C1.89863 16.3562 1.75014 15.8116 1.60112 15.265L1.59971 15.2599C1.43178 14.6438 1.34295 14.2189 1.25727 13.8091C1.15562 13.3229 1.05841 12.8579 0.838777 12.12C0.689277 11.6178 0.752597 11.1819 1.01688 10.8924C1.20784 10.6836 1.58464 10.4589 2.29368 10.5787C3.04266 10.7045 3.6189 11.1704 3.95804 11.9241L4.68956 13.551C4.97004 14.1754 5.15136 14.5548 5.33371 14.9364C5.51268 15.3108 5.69264 15.6874 5.96827 16.2996C6.0297 16.4373 6.093 16.5777 6.165 16.7036C6.2378 16.8284 6.3122 16.8784 6.3536 16.882C6.3975 16.8872 6.4801 16.8516 6.568 16.7353C6.6226 16.6623 6.6734 16.5757 6.7277 16.4831L6.7293 16.4805C6.7514 16.4412 6.774 16.4038 6.7966 16.3665L8.1841 14.078C8.2848 13.9119 8.3858 13.7455 8.487 13.5788C10.0094 11.0699 11.5755 8.48887 13.1365 5.95688C13.3681 5.58009 13.7637 5.23506 14.1945 5.03649C14.8004 4.75621 15.5522 4.99249 15.9045 5.57466C16.1549 5.98808 16.1777 6.05128 16.201 6.48529C16.2154 6.76405 16.0864 7.41212 15.9642 7.58512C15.9564 7.59643 15.9486 7.60759 15.9408 7.61864C15.9199 7.64849 15.8995 7.67755 15.8819 7.70657C14.8014 9.49099 13.7183 11.2739 12.6353 13.0568L11.8562 14.3404L11.7519 14.5127C11.558 14.8415 11.5885 14.9555 11.5896 14.9594C11.5927 14.9745 11.624 15.0033 11.6809 15.0362C11.7538 15.0771 11.8542 15.1332 12.0913 14.7445C12.4425 14.1703 12.7911 13.5946 13.1397 13.0188L13.5953 12.2664L13.6471 12.1809C13.6955 12.0982 13.7445 12.0143 13.8049 11.929C14.3046 11.2189 15.2156 11.0311 15.9718 11.4792L15.9859 11.4877C16.7569 11.9546 17.0171 12.8646 16.5904 13.6124C16.2349 14.2369 15.8545 14.8595 15.4858 15.4596C15.327 15.7191 15.1674 15.9798 15.0091 16.2413C14.9843 16.2822 14.9587 16.3244 14.9326 16.3646L14.9311 16.367C14.8764 16.4545 14.8247 16.5373 14.7847 16.6175C14.6755 16.841 14.7546 16.8858 14.8403 16.9344C14.9119 16.9744 14.9943 17.0206 15.1078 16.8445C15.2731 16.5889 15.4358 16.3202 15.5934 16.0599C15.7057 15.8745 15.8189 15.6876 15.9337 15.5036C16.4906 14.6157 17.3924 14.3681 18.2306 14.8739L18.2331 14.8755C19.0692 15.3818 19.2652 16.2941 18.7311 17.1991C18.5102 17.5726 18.2673 17.9738 17.9871 18.4249C17.8065 18.7147 17.8846 18.7663 17.974 18.8253C18.0522 18.8776 18.1237 18.9226 18.3283 18.6711Z" fill="#fff" />
          </svg>}
        />
      </div>
    </div>
    <Introduction content={seoInfo?.content ?? ""} />
  </Container>
}

export default DMVSubjectView;